[{"C:\\Users\\billl\\Documents\\Pluralsight\\Foundation\\react-foundation\\src\\index.js":"1","C:\\Users\\billl\\Documents\\Pluralsight\\Foundation\\react-foundation\\src\\App.js":"2","C:\\Users\\billl\\Documents\\Pluralsight\\Foundation\\react-foundation\\src\\reportWebVitals.js":"3","C:\\Users\\billl\\Documents\\Pluralsight\\Foundation\\react-foundation\\src\\slider.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":7584,"mtime":1609112105064,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":2324,"mtime":1609100926074,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1w657m2",{"filePath":"13","messages":"14","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\billl\\Documents\\Pluralsight\\Foundation\\react-foundation\\src\\index.js",[],["20","21"],"C:\\Users\\billl\\Documents\\Pluralsight\\Foundation\\react-foundation\\src\\App.js",["22","23","24","25","26","27","28","29","30"],"C:\\Users\\billl\\Documents\\Pluralsight\\Foundation\\react-foundation\\src\\reportWebVitals.js",[],"C:\\Users\\billl\\Documents\\Pluralsight\\Foundation\\react-foundation\\src\\slider.js",["31"],"import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\n\r\n// TODO: Add support for changing the values.\r\n\r\n/**\r\n * Slider component.\r\n * http://foundation.zurb.com/sites/docs/slider.html\r\n */\r\nexport class Slider extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { value: 0 };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ value: this.props.initialStart || 0 });\r\n  }\r\n\r\n  render() {\r\n    const { handle: handleProps, fill: fillProps } = this.props;\r\n\r\n    return (\r\n      <div {...this.props} className={classNameFromProps(this.props)}>\r\n        <SliderHandle {...handleProps}/>\r\n        <SliderFill {...fillProps}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Two-handle slider component.\r\n * http://foundation.zurb.com/sites/docs/slider.html#two-handles\r\n */\r\nexport class TwoHandleSlider extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { minValue: 0, maxValue: 100 };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      minValue: this.props.initialStart || 0,\r\n      maxValue: this.props.initialEnd || 100\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { minHandle: minHandleProps, maxHandle: maxHandleProps, fill: fillProps } = this.props;\r\n\r\n    return (\r\n      <div {...this.props} className={classNameFromProps(this.props)}>\r\n        <SliderHandle {...minHandleProps}/>\r\n        <SliderHandle {...maxHandleProps}/>\r\n        <SliderFill {...fillProps}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Slider handle sub-component.\r\n *\r\n * @param {Object} props\r\n * @returns {XML}\r\n */\r\nexport const SliderHandle = props => {\r\n  return (\r\n    <span>\r\n      <span {...props} role=\"slider\"/>\r\n      <input type=\"hidden\"/>\r\n    </span>\r\n  );\r\n};\r\n\r\n/**\r\n * Slider fill sub-component.\r\n *\r\n * @param {Object} props\r\n * @returns {XML}\r\n */\r\nexport const SliderFill = props => (\r\n  <span className={props.className || 'slider-fill'}/>\r\n);\r\n\r\n/**\r\n * Creates the slider class name from the given properties.\r\n * This method allows us to share code between the `Slider` and `TwoHandleSlider` components.\r\n *\r\n * @param {Object} props\r\n * @returns {string}\r\n */\r\nfunction classNameFromProps(props) {\r\n  return classNames(\r\n    props.className || 'slider',\r\n    {\r\n      'vertical': props.isVertical,\r\n      'disabled': props.isDisabled\r\n    }\r\n  );\r\n}\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":4,"column":17,"nodeType":"38","messageId":"39","endLine":4,"endColumn":25},{"ruleId":"36","severity":1,"message":"40","line":4,"column":27,"nodeType":"38","messageId":"39","endLine":4,"endColumn":36},{"ruleId":"41","severity":1,"message":"42","line":13,"column":17,"nodeType":"43","endLine":13,"endColumn":29},{"ruleId":"41","severity":1,"message":"42","line":15,"column":15,"nodeType":"43","endLine":15,"endColumn":27},{"ruleId":"41","severity":1,"message":"42","line":22,"column":17,"nodeType":"43","endLine":22,"endColumn":29},{"ruleId":"41","severity":1,"message":"42","line":23,"column":17,"nodeType":"43","endLine":23,"endColumn":29},{"ruleId":"36","severity":1,"message":"44","line":31,"column":10,"nodeType":"38","messageId":"39","endLine":31,"endColumn":22},{"ruleId":"41","severity":1,"message":"45","line":145,"column":15,"nodeType":"43","endLine":145,"endColumn":45},{"ruleId":"41","severity":1,"message":"42","line":151,"column":17,"nodeType":"43","endLine":151,"endColumn":29},{"ruleId":"46","severity":1,"message":"47","line":73,"column":24,"nodeType":"48","endLine":73,"endColumn":37},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ImageContent' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/role-has-required-aria-props","Elements with the ARIA role \"slider\" must have the following attributes defined: aria-valuenow","JSXAttribute","no-global-assign","no-unsafe-negation"]